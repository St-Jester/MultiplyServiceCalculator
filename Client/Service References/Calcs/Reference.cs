//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.Calcs {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Calcs.ICalculator")]
    public interface ICalculator {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Sum", ReplyAction="http://tempuri.org/ICalculator/SumResponse")]
        double Sum(double x, double y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Sum", ReplyAction="http://tempuri.org/ICalculator/SumResponse")]
        System.Threading.Tasks.Task<double> SumAsync(double x, double y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Sub", ReplyAction="http://tempuri.org/ICalculator/SubResponse")]
        double Sub(double x, double y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Sub", ReplyAction="http://tempuri.org/ICalculator/SubResponse")]
        System.Threading.Tasks.Task<double> SubAsync(double x, double y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Divide", ReplyAction="http://tempuri.org/ICalculator/DivideResponse")]
        double Divide(double x, double y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Divide", ReplyAction="http://tempuri.org/ICalculator/DivideResponse")]
        System.Threading.Tasks.Task<double> DivideAsync(double x, double y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Mult", ReplyAction="http://tempuri.org/ICalculator/MultResponse")]
        double Mult(double x, double y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Mult", ReplyAction="http://tempuri.org/ICalculator/MultResponse")]
        System.Threading.Tasks.Task<double> MultAsync(double x, double y);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalculatorChannel : Client.Calcs.ICalculator, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculatorClient : System.ServiceModel.ClientBase<Client.Calcs.ICalculator>, Client.Calcs.ICalculator {
        
        public CalculatorClient() {
        }
        
        public CalculatorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalculatorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double Sum(double x, double y) {
            return base.Channel.Sum(x, y);
        }
        
        public System.Threading.Tasks.Task<double> SumAsync(double x, double y) {
            return base.Channel.SumAsync(x, y);
        }
        
        public double Sub(double x, double y) {
            return base.Channel.Sub(x, y);
        }
        
        public System.Threading.Tasks.Task<double> SubAsync(double x, double y) {
            return base.Channel.SubAsync(x, y);
        }
        
        public double Divide(double x, double y) {
            return base.Channel.Divide(x, y);
        }
        
        public System.Threading.Tasks.Task<double> DivideAsync(double x, double y) {
            return base.Channel.DivideAsync(x, y);
        }
        
        public double Mult(double x, double y) {
            return base.Channel.Mult(x, y);
        }
        
        public System.Threading.Tasks.Task<double> MultAsync(double x, double y) {
            return base.Channel.MultAsync(x, y);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Calcs.ITimeCalc")]
    public interface ITimeCalc {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimeCalc/AddMinutesToNow", ReplyAction="http://tempuri.org/ITimeCalc/AddMinutesToNowResponse")]
        string AddMinutesToNow(double mins);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITimeCalc/AddMinutesToNow", ReplyAction="http://tempuri.org/ITimeCalc/AddMinutesToNowResponse")]
        System.Threading.Tasks.Task<string> AddMinutesToNowAsync(double mins);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITimeCalcChannel : Client.Calcs.ITimeCalc, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TimeCalcClient : System.ServiceModel.ClientBase<Client.Calcs.ITimeCalc>, Client.Calcs.ITimeCalc {
        
        public TimeCalcClient() {
        }
        
        public TimeCalcClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TimeCalcClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TimeCalcClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TimeCalcClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string AddMinutesToNow(double mins) {
            return base.Channel.AddMinutesToNow(mins);
        }
        
        public System.Threading.Tasks.Task<string> AddMinutesToNowAsync(double mins) {
            return base.Channel.AddMinutesToNowAsync(mins);
        }
    }
}
